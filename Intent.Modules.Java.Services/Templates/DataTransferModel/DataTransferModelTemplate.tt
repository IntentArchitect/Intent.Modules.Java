<#@ template language="C#" inherits="JavaTemplateBase<Intent.Modelers.Services.Api.DTOModel, Intent.Modules.Java.Services.Templates.DataTransferModel.DataTransferModelDecorator>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.Java.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modelers.Services.Api" #>
package <#= Package #>;

import lombok.Data;
import lombok.NoArgsConstructor;

<#  if (Model.Fields.Any()) { #>
@<#= ImportType("lombok.AllArgsConstructor") #>
<#  } #>
@NoArgsConstructor
@Data
<#      foreach(var annotation in GetDecorators().SelectMany(x => x.GetClassAnnotations())) { #>
<#= annotation #>
<#      } #>
public class <#= ClassName #> {
<#  foreach(var field in Model.Fields) { #>
<#      foreach(var annotation in GetDecorators().SelectMany(x => x.GetFieldAnnotations(field))) { #>
    <#= annotation #>
<#      } #>
    private <#= GetTypeName(field.TypeReference) #> <#= field.Name #>;
<#  } #><#= GetDecoratorsOutput(x => x.Methods()) #>
}