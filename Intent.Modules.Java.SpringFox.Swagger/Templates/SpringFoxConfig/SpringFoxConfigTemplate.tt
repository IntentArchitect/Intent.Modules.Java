<#@ template language="C#" inherits="JavaTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.Java.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
package <#= Package #>;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;

@Configuration
@EnableWebMvc
public class <#= ClassName #> {

    @Bean
    public Docket api() {
        return new Docket(DocumentationType.SWAGGER_2)
<# if (_usesJwtAuth) { #>
          .securityContexts(<#= ImportType("java.util.Arrays") #>.asList(securityContext()))
          .securitySchemes(Arrays.asList(apiKey()))
<# } #>
          .select()
          .apis(RequestHandlerSelectors.any())
          .paths(PathSelectors.any())
          .build();
    }
<# if (_usesJwtAuth) { #>

    private <#= ImportType("springfox.documentation.spi.service.contexts.SecurityContext") #> securityContext() {
        return SecurityContext.builder().securityReferences(defaultAuth()).build();
    }

    private <#= ImportType("java.util.List") #><<#= ImportType("springfox.documentation.service.SecurityReference") #>> defaultAuth() {
        <#= ImportType("springfox.documentation.service.AuthorizationScope") #> authorizationScope = new AuthorizationScope("global", "accessEverything");
        AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];
        authorizationScopes[0] = authorizationScope;
        return Arrays.asList(new SecurityReference("JWT", authorizationScopes));
    }

    private <#= ImportType("springfox.documentation.service.ApiKey") #> apiKey() {
        return new ApiKey("JWT", "Authorization", "header");
    }
<# } #>
}