<#@ template language="C#" inherits="JavaTemplateBase<Intent.Modelers.Services.Api.ServiceModel, Intent.Modules.Java.SpringBoot.Templates.RestController.RestControllerDecorator>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.Java.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modelers.Services.Api" #>
package <#= Package #>;

import lombok.AllArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
<#= GetControllerAnnotations() #>
@AllArgsConstructor
public class <#= ClassName #> {
    private final <#= GetServiceInterfaceName() #> <#= GetServiceInterfaceName().ToCamelCase() #>;
<#  foreach(var operation in Model.Operations) { #>

    <#= GetOperationAnnotations(operation) #>
    public <#= GetReturnType(operation) #> <#= operation.Name #>(<#= GetParameters(operation) #>) {
<#      if (operation.ReturnType != null) { #>
        final <#= GetTypeName(operation) #> result = <#= GetServiceInterfaceName().ToCamelCase() #>.<#= operation.Name #>(<#= this.GetArguments(operation.Parameters) #>);

        return new ResponseEntity<>(result, HttpStatus.OK);
<#      } else { #>
        <#= GetServiceInterfaceName().ToCamelCase() #>.<#= operation.Name #>(<#= this.GetArguments(operation.Parameters) #>);

        return new ResponseEntity<>(HttpStatus.OK);
<#      } #>
    }
<#  } #>
}
