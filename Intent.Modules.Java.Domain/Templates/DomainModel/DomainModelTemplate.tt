<#@ template language="C#" inherits="JavaTemplateBase<Intent.Modelers.Domain.Api.ClassModel, Intent.Modules.Java.Domain.Templates.DomainModel.DomainModelDecorator>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.Java.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modelers.Domain.Api" #>
package <#= Package #>;

import java.io.Serializable;

<#= GetDecoratorsOutput(x => x.ClassAnnotations()) #>
public class <#= ClassName #> extends <#= GetBaseClass() #> implements Serializable {
    private static final long serialVersionUID = 1L;
<#  foreach(var attribute in Model.Attributes) { #>
    <#= GetDecoratorsOutput(x => x.BeforeField(attribute)) #>
    private <#= GetTypeName(attribute) #> <#= attribute.Name.ToCamelCase() #>;
<#  } #>

<#  foreach(var associationEnd in Model.AssociatedClasses.Where(x => x.IsNavigable)) { #>
    <#= GetDecoratorsOutput(x => x.BeforeField(associationEnd)) #>
    private <#= GetTypeName(associationEnd) #> <#= associationEnd.Name.ToCamelCase() #>;
<#  } #>
}
