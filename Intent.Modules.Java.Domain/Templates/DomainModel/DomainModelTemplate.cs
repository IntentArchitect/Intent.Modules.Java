//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intent.Modules.Java.Domain.Templates.DomainModel {
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.Java.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modelers.Domain.Api;
    using System;
    
    
    public partial class DomainModelTemplate : JavaTemplateBase<ClassModel> {
        
        public override string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 11 ""
            this.Write("package ");
            
            #line default
            #line hidden
            
            #line 11 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Package ));
            
            #line default
            #line hidden
            
            #line 11 ""
            this.Write(";\n\nimport lombok.Data;\n\nimport javax.persistence.*;\nimport java.io.Serializable;\n" +
                    "\n@Entity()\n@Data\npublic class ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(" extends ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetBaseClass() ));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(" {\n");
            
            #line default
            #line hidden
            
            #line 21 ""
  foreach(var attribute in Model.Attributes) { 
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write("    private ");
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetTypeName(attribute) ));
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( attribute.Name.ToCamelCase() ));
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 23 ""
  } 
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 25 ""
  foreach(var attribute in Model.AssociatedClasses.Where(x => x.IsNavigable)) { 
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write("    private ");
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetTypeName(attribute) ));
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( attribute.Name.ToCamelCase() ));
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 27 ""
  } 
            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write("}\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}
